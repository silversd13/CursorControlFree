function [Neuro,KF,Params] = RunLoop(Params,Neuro,DataDir,KF)
% Defines the structure of collected data on each trial
% Loops through blocks and trials within blocks

global Cursor

%% Start Experiment
DataFields = struct(...
    'Params',Params,...
    'Trial',NaN,...
    'TrialStartTime',NaN,...
    'TrialEndTime',NaN,...
    'Time',[],...
    'CursorState',[],...
    'KalmanFilter',[],...
    'NeuralTime',[],...
    'NeuralTimeBR',[],...
    'NeuralSamps',[],...
    'NeuralFeatures',{{}},...
    'NeuralFactors',{{}},...
    'BroadbandData',{{}},...
    'ProcessedData',{{}},...
    'ChStats',[],...
    'FeatureStats',[],...
    'Events',[]...
    );

%%  Loop Through Blocks of Trials
Trial = 0;
tlast = GetSecs;
Cursor.LastPredictTime = tlast;
Cursor.LastUpdateTime = tlast;
Cursor.State = [0,0,1]';

while 1, % Trial Loop
    
    % update trial
    Trial = Trial + 1;
    Instructions = [...
        sprintf('\n\nTrial %i\n\n',Trial)...
        '\nAt any time, you can press ''p'' to briefly pause the task.'...
        '\n\nPress the ''Space Bar'' to begin!' ];
    InstructionScreen(Params,Instructions);

    % set up trial
    TrialData = DataFields;
    TrialData.Trial = Trial;
    TrialData.KalmanFilter = KF;
    TrialData.ChStats = Neuro.ChStats;
    TrialData.FeatureStats = Neuro.FeatureStats;
    
    % Run Trial
    TrialData.TrialStartTime  = GetSecs;
    if Params.SerialSync, fprintf(Params.SerialPtr, '%s\n', 'TST'); end
    if Params.ArduinoSync, PulseArduino(Params.ArduinoPtr,Params.ArduinoPin,1); end
    [TrialData,Neuro,KF,Params] = RunTrial(TrialData,Params,Neuro,KF);
    if Params.SerialSync, fprintf(Params.SerialPtr, '%s\n', 'TET'); end
    if Params.ArduinoSync, PulseArduino(Params.ArduinoPtr,Params.ArduinoPin,5); end
    TrialData.TrialEndTime    = GetSecs;
    
    % Save Data from Single Trial
    save(...
        fullfile(DataDir,sprintf('Data%04i.mat',Trial)),...
        'TrialData',...
        '-v7.3','-nocompression');
    
end % Trial Loop



end % RunLoop



